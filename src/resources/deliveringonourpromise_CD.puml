@startuml

'Classes
class Shell {
    - {field} phClient : PromiseHistoryClient
    - {field} inputHandler : ATAUserHandler
    + {method} {static} void main()
    ~ {method} handleUserRequest() : String
    - {method} renderPromiseHistoryTable(PromiseHistory promiseHistory) : String
    - {method} renderOrderTable(Order order) : String
    ~ {method} userHasAnotherRequest() : boolean
    - {method} processCommandLineArgs(String[] args) : void
    - {method} renderFixtures() : String

}

class PromiseHistoryClient {
    - {field} getPromiseHistoryByOrderIdActivity : GetPromiseHistoryByOrderIdActivity
    + {method} getPromiseHistoryByOrderId(String orderId) : PromiseHistory
}

class GetPromiseHistoryByOrderIdActivity {
    - {field} ReadOnlyDao<String, Order> orderDao
    - {field} ReadOnlyDao<String, List<Primise>> "PromiseDAO"
    + {method} getPromiseHistorybyOrderId(String orderId) : PromiseHistory
}
class OrderDao {
    - {field} omaClient : OrderManipulationAuthorityClient
    + {method} get(String orderId) : Order
    - {method} convertToOrderItem(OrderResultItem orderResultItem) : OrderItem
}
class PromiseDao {
    - {field} dpsClient : DeliveryPromiseServiceClient
    - {field} omaClient : OrderManipulationAuthorityClient
    + {method} get(String customerOrderItemId) : List<Promise>
    - {method} getDeliveryDateForOrderItem(String customerOrderItemId) : ZonedDateTime
}
class OrderManipulationAuthorityClient {
    - {field} orderDatastore : OrderDatastore
    + {method} getCustomerOrderByOrderId(String orderId) : OrderResult
    + {method} getCustomerOrderItemByOrderItemId(String orderItemId) : OrderResultItem
    - {method} convertOrderDataToOrderResults(OrderData orderData) : OrderResult
    - {method} convertOrderShipmentDataToOrderResultShipment(OrderShipmentData orderShipmentData) : OrderShipment
    - {method} convertShipmentItemDataToShipmentItem(OrderShipmentData.CustomerShipmentItemData shipmentItemData) : OrderShipment.ShipmentItem
    - {method} convertOrderItemDataToOrderResultItem(OrderItemData orderItemData) : OrderResultItem
}
class DeliveryPromise\nServiceClient {
    - {field} dpService : DeliveryPromiseService
    + {method} getDeliveryPromiseByOrderItemId(String customerOrderItemId) : Promise
}

class App {
    + {method} {static} getPromiseHistoryClient() : PromiseHistoryClient
    + {method} {static} getPromiseHistoryByOrderIdActivity() : GetPromiseHistoryByOrderIdActivity
    + {method} {static} getOrderDao() : OrderDao
    + {method} {static} getPromiseDao() : PromiseDao
    + {method} {static} getOrderManipulationAuthorityClient() : OrderManipulationAuthorityClient
    + {method} {static} getDeliveryPromiseServiceClient() : DeliveryPromiseServiceClient
    + {method} {static} getOrderManipulationAuthority() : OrderManipulationAuthority
    + {method} {static} getDeliveryPromiseService() : DeliveryPromiseService
    + {method} {static} getOrderDatastore() : OrderDatastore

}

interface ReadOnlyDao {
    {method} get(I orderId)
}

'Relationships
Shell --* PromiseHistoryClient
PromiseHistoryClient *-- GetPromiseHistoryByOrderIdActivity
GetPromiseHistoryByOrderIdActivity *-- OrderDao
OrderDao *-- OrderManipulationAuthorityClient
OrderDao ..|> ReadOnlyDao
PromiseDao ..|> ReadOnlyDao
GetPromiseHistoryByOrderIdActivity *-- PromiseDao
PromiseDao *-- DeliveryPromiseServiceClient
PromiseDao *-- OrderManipulationAuthorityClient
PromiseHistory *-- Order
PromiseHistory *-- Promise
Order *-- OrderItem

@enduml